@model IEnumerable<CadCliente.Models.ClienteViewModel>

@{
    ViewData["Title"] = "Clientes";
}

<div class="container">
    <h1 class="mb-4">@ViewData["Title"]</h1>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="mb-3">
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Novo Cliente
        </a>
    </div>

    <div id="loading" class="text-center" style="display: none;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Carregando...</span>
        </div>
        <p class="mt-2">Carregando clientes...</p>
    </div>

    <div id="clientesContainer">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Logo</th>
                            <th>Nome</th>
                            <th>Email</th>
                            <th>Endereços</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.LogotipoUrl))
                                    {
                                        <img src="@item.LogotipoUrl" alt="Logo" style="max-width: 50px; max-height: 50px;" class="img-thumbnail" />
                                    }
                                </td>
                                <td>@item.Nome</td>
                                <td>@item.Email</td>
                                <td>
                                    @if (item.Logradouros != null && item.Logradouros.Any())
                                    {
                                        <ul class="list-unstyled mb-0">
                                            @foreach (var endereco in item.Logradouros)
                                            {
                                                <li>@endereco.Endereco</li>
                                            }
                                        </ul>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                            <i class="bi bi-pencil"></i> Editar
                                        </a>
                                        <button type="button" class="btn btn-sm btn-danger" onclick="confirmarExclusao(@item.Id)">
                                            <i class="bi bi-trash"></i> Excluir
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info">
                Nenhum cliente cadastrado.
            </div>
        }
    </div>
</div>

<!-- Modal de Confirmação -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar Exclusão</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Tem certeza que deseja excluir este cliente?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="btnConfirmDelete">Excluir</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let clienteIdParaExcluir = null;
        const modal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));

        function confirmarExclusao(id) {
            clienteIdParaExcluir = id;
            modal.show();
        }

        document.getElementById('btnConfirmDelete').addEventListener('click', function () {
            if (clienteIdParaExcluir) {
                excluirCliente(clienteIdParaExcluir);
            }
        });

        function excluirCliente(id) {
            // Mostrar loading
            document.body.style.cursor = 'wait';
            const btnConfirmDelete = document.getElementById('btnConfirmDelete');
            btnConfirmDelete.disabled = true;
            btnConfirmDelete.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Excluindo...';

            fetch(`/Cliente/Delete/${id}`, {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                modal.hide();
                if (data.success) {
                    // Recarregar a página após um breve delay
                    setTimeout(() => {
                        window.location.reload();
                    }, 500);
                } else {
                    alert(data.message || 'Erro ao excluir o cliente.');
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao excluir o cliente.');
            })
            .finally(() => {
                document.body.style.cursor = 'default';
                btnConfirmDelete.disabled = false;
                btnConfirmDelete.innerHTML = 'Excluir';
            });
        }
    </script>
}
